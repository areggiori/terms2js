/* From: https://github.com/dplatform/terms2js */
(function(exports){var voc={terms:{1:["2D Video"],2:["Plano-Stereoscopic Video"],3:["Multiview Autoscopic Video"],4:["Holographic Video"],2.1:["Frame-Compatible 3D"],"2.1.1":["Side-by-Side 3D Format"],"2.1.2":["Top-and-Bottom 3D Format"],"2.1.3":["Checkerboard-based 3D Format"],"2.1.4":["Column-based interleaving 3D Format"],"2.1.5":["Row-based interleaving 3D Format"],"2.1.6":["Temporal interleaving 3D Format"],2.2:["Service-Compatible 3D"],"2.2.1":["MVC Stereo profile"],"2.2.2":["Frame-Packing 3D Format"],3.1:["Downwards-compatible multiscopic Video"],3.2:["Non-downwards-compatible multiscopic 3D"],4.1:["Holographic 3D"]},names:{"2D Video":["1"],"Plano-Stereoscopic Video":["2"],"Frame-Compatible 3D":["2.1"],"Side-by-Side 3D Format":["2.1.1"],"Top-and-Bottom 3D Format":["2.1.2"],"Checkerboard-based 3D Format":["2.1.3"],"Column-based interleaving 3D Format":["2.1.4"],"Row-based interleaving 3D Format":["2.1.5"],"Temporal interleaving 3D Format":["2.1.6"],"Service-Compatible 3D":["2.2"],"MVC Stereo profile":["2.2.1"],"Frame-Packing 3D Format":["2.2.2"],"Multiview Autoscopic Video":["3"],"Downwards-compatible multiscopic Video":["3.1"],"Non-downwards-compatible multiscopic 3D":["3.2"],"Holographic Video":["4"],"Holographic 3D":["4.1"]},uri:"urn:tva:metadata:cs:PictureFormatCS:2011",versionDate:"2013-01-07"};var isTermUri=function(term){return term.indexOf(voc.uri)==0?true:false};var getUri=function(){return voc.uri};var getVersionDate=function(){return voc.versionDate};exports.isValid=function(term){var t;if(isTermUri(term)==true){t=term.replace(voc.uri,"")}else{t=term}return voc.terms.hasOwnProperty(t)};exports.getTermId=function(termUri){if(isTermUri(termUri)==true){return termUri.replace(voc.uri,"")}else{return null}};exports.getTermUri=function(termId){return voc.uri+(voc.uri.match(/^urn:/)?":":"#")+termId};exports.isDeprecated=function(termId){if(voc.deprecated){for(var i=0;i<voc.deprecated;i++){if(voc.deprecated[i]==termId)return true}}return false};exports.getAllTermId=function(){var result=[];for(termId in voc.terms){result.push(termId)}return result};exports.getAllTermIdMatching=function(string){var result=[];if(voc.names[string]){result.push.apply(result,voc.names[string])}else{for(var n in voc.names){if(voc.names[n].indexOf(string)!==-1)result.push.apply(result,voc.names[n])}}return result};exports.getTermInfo=function(termId){var result={};if(exports.isValid(termId)){result["Name"]=voc.terms[termId]}return result}})(typeof exports==="undefined"?this["terms"]={}:exports);